alter table "public"."clues" drop constraint "clues_game_id_fkey";

create table "public"."categories" (
    "id" bigint generated by default as identity not null,
    "game_id" uuid,
    "name" character varying not null,
    "note" character varying,
    "created_at" timestamp with time zone not null default now(),
    "round" bigint not null default '0'::bigint
);


alter table "public"."categories" enable row level security;

alter table "public"."clues" drop column "category";

alter table "public"."clues" drop column "game_id";

alter table "public"."clues" drop column "round";

alter table "public"."clues" add column "category_id" bigint not null;

CREATE UNIQUE INDEX categories_pkey ON public.categories USING btree (id);

alter table "public"."categories" add constraint "categories_pkey" PRIMARY KEY using index "categories_pkey";

alter table "public"."categories" add constraint "categories_game_id_fkey" FOREIGN KEY (game_id) REFERENCES games(id) not valid;

alter table "public"."categories" validate constraint "categories_game_id_fkey";

alter table "public"."clues" add constraint "clues_category_id_fkey" FOREIGN KEY (category_id) REFERENCES categories(id) not valid;

alter table "public"."clues" validate constraint "clues_category_id_fkey";

create policy "Enable insert for all users"
on "public"."categories"
as permissive
for insert
to public
with check (true);


create policy "Enable read access for all users"
on "public"."categories"
as permissive
for select
to public
using (true);



drop function if exists "storage"."can_insert_object"(bucketid text, name text, owner uuid, metadata jsonb);
